#!/bin/bash

# CrashPlanRemote
# Andy Sayler
# September 2015
# Works with CrashPlan 4.3+ and Linux
# Implements http://support.code42.com/CrashPlan/Latest/Configuring/Using_CrashPlan_On_A_Headless_Computer

### Utility Functions ###
errcho(){ >&2 echo "$@"; }

display_usage() { 
    errcho -e "\nUsage:\n$0 <SSH Connection String> \n" 
} 

rsync_check() { 
    rsync -Paz --delete "${1}" "${2}"
    if [[ $? -ne 0 ]]
    then
        errcho "Failed to copy ${1} to ${2}"
        exit 1
    fi
} 

### Check Args ###
if [[ $# -ne 1 ]]
then
    display_usage
    exit 1
fi
if [[ ( $1 == "--help") ||  $1 == "-h" ]] 
then 
    display_usage
    exit 0
fi 

### Get Args ###
SSHCONNSTR=$1
REMOTEHOSTNAME=$(ssh $SSHCONNSTR hostname -f)

CRASHPLAN_DIR_LOCAL="$HOME/.crashplanremote/$REMOTEHOSTNAME"
CRASHPLAN_DIR_REMOTE="/usr/local/crashplan"
CRASHPLAN_DESKTOP="${CRASHPLAN_DIR_LOCAL}/bin/CrashPlanDesktop"

INFO_DIR_LOCAL="${HOME}/.crashplan"
INFO_DIR_REMOTE="/var/lib/crashplan"
INFO_FILE=".ui_info"
INFO_FILE_OLD="${INFO_FILE}.robin.old"

INFO_PATH_LOCAL="${INFO_DIR_LOCAL}/${INFO_FILE}"
INFO_PATH_REMOTE="${INFO_DIR_REMOTE}/${INFO_FILE}"
INFO_PATH_OLD="${INFO_DIR_LOCAL}/${INFO_FILE_OLD}"

PORT_ORIG="4243"
PORT_NEW="4200"

### Check Remote Files ###
if ! (ssh $SSHCONNSTR '[ -d $CRASHPLAN_DIR_REMOTE ]')
then
    errcho "Could not locate remote crashplan install at $SSHCONNSTR:$CRASHPLAN_DIR_REMOTE"
    exit 1
fi

if ! (ssh $SSHCONNSTR '[ -e $INFO_PATH_REMOTE ]')
then
    errcho "Could not locate remote crashplan $INFO_FILE at $SSHCONNSTR:$INFO_PATH_REMOTE"
    exit 1
fi

### Get Remote Install ###
echo "Syncing Remote Install Files to Local Host"

if [[ ! -d "${CRASHPLAN_DIR_LOCAL}" ]]
then
    mkdir "${CRASHPLAN_DIR_LOCAL}"
fi

rsync_check ${SSHCONNSTR}:"${CRASHPLAN_DIR_REMOTE}/bin" "${CRASHPLAN_DIR_LOCAL}/"
rsync_check ${SSHCONNSTR}:"${CRASHPLAN_DIR_REMOTE}/jre" "${CRASHPLAN_DIR_LOCAL}/" 
rsync_check ${SSHCONNSTR}:"${CRASHPLAN_DIR_REMOTE}/lang" "${CRASHPLAN_DIR_LOCAL}/" 
rsync_check ${SSHCONNSTR}:"${CRASHPLAN_DIR_REMOTE}/lib" "${CRASHPLAN_DIR_LOCAL}/" 
rsync_check ${SSHCONNSTR}:"${CRASHPLAN_DIR_REMOTE}/skin" "${CRASHPLAN_DIR_LOCAL}/" 
rsync_check ${SSHCONNSTR}:"${CRASHPLAN_DIR_REMOTE}/*.so" "${CRASHPLAN_DIR_LOCAL}/" 

if [[ ! -d "${CRASHPLAN_DIR_LOCAL}/conf" ]]
then
    mkdir "${CRASHPLAN_DIR_LOCAL}/conf"
fi

if [[ ! -d "${CRASHPLAN_DIR_LOCAL}/log" ]]
then
    mkdir "${CRASHPLAN_DIR_LOCAL}/log"
fi
rm -rf "${CRASHPLAN_DIR_LOCAL}/log/ui_error.log"
touch "${CRASHPLAN_DIR_LOCAL}/log/ui_error.log"
rm -rf "${CRASHPLAN_DIR_LOCAL}/log/ui_output.log"
touch "${CRASHPLAN_DIR_LOCAL}/log/ui_output.log"

INSTALL_VARS="${CRASHPLAN_DIR_LOCAL}/install.vars"
rm -rf "${INSTALL_VARS}"
echo "" >> "${INSTALL_VARS}"
echo "TARGETDIR=${CRASHPLAN_DIR_LOCAL}" >> "${INSTALL_VARS}"
echo "BINSDIR=" >> "${INSTALL_VARS}"
echo "MANIFESTDIR=${CRASHPLAN_DIR_LOCAL}/manifest" >> "${INSTALL_VARS}"
echo "INITIR=" >> "${INSTALL_VARS}"
echo "RUNLVLDIR=" >> "${INSTALL_VARS}"
echo "INSTALLDATE=" >> "${INSTALL_VARS}"
echo "APP_BASENAME=CrashPlan" >> "${INSTALL_VARS}"
echo "DIR_BASENAME=crashplan" >> "${INSTALL_VARS}"
echo "DOWNLOAD_HOST=download.crashplan.com" >> "${INSTALL_VARS}"
echo "JAVACOMMON=${CRASHPLAN_DIR_LOCAL}/jre/bin/java" >> "${INSTALL_VARS}"

### Get Remote INFO_FILE ###
echo "Syncing Remote Auth File to Local Host"

if [[ ! -d "${INFO_DIR_LOCAL}" ]]
then
    mkdir "${INFO_DIR_LOCAL}"
fi

if [[ -e  "${INFO_PATH_LOCAL}" ]]
then
    mv "${INFO_PATH_LOCAL}" "${INFO_PATH_OLD}"
fi

scp ${SSHCONNSTR}:"${INFO_PATH_REMOTE}" "${INFO_PATH_LOCAL}"
if [[ $? -ne 0 ]]
then
    errcho "Failed to copy ${INFO_PATH_REMOTE} from host ${SSHCONNSTR}"
    exit 1
fi

cleanup_info(){
    echo "Cleaning Up Auth File"
    if [[ -e "${INFO_PATH_OLD}" ]]
    then
        mv "${INFO_PATH_OLD}" "${INFO_PATH_LOCAL}"
    else
        rm "${INFO_PATH_LOCAL}"
    fi
}

sed -i "s/${PORT_ORIG}/${PORT_NEW}/" "${INFO_PATH_LOCAL}"
if [[ $? -ne 0 ]]
then
    errcho "Failed to update port in ${INFO_PATH_LOCAL}"
    cleanup_info
    exit 1
fi

### Set Port Forwarding via SSH ###
echo "Starting SSH Port Forward"
# TODO: Autodetect PORT_ORIG via INFO_FILE
CMDSSH="ssh -N -f -L ${PORT_NEW}:localhost:${PORT_ORIG} ${SSHCONNSTR}"
${CMDSSH}
if [[ $? -ne 0 ]]
then
    errcho "Failed to establish SSH port forwarding to host ${SSHCONNSTR}"
    cleanup_info
    exit 1
fi

cleanup_ssh(){
    echo "Closing SSH Port Forward"
    pkill -f "${CMDSSH}"
}

### Run CrashPlan Desktop ###
echo "Starting CrashPlanDesktop"
${CRASHPLAN_DESKTOP}
if [[ $? -ne 0 ]]
then
    errcho "CrashPlanDeskrop Exited with Error"
    cleanup_ssh
    cleanup_info
    exit 1
fi

### Cleanup ###
echo "Press any key when complete to perform cleanup"
read
cleanup_ssh
cleanup_info
exit 0
